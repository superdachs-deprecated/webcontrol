from django.db import models
from subprocess import call
from iptools.ipv4 import netmask2prefix

class Hostname(models.Model):
    hostname = models.CharField(max_length=100)

    def save(self):
        call(["hostname", str(self.hostname)])
        call(["echo", "#autogenerated by webcontrol, do not modify", ">", "/etc/hostname"])
        call(["echo", str(self.hostname), ">>", "/etc/hostname"])
        super(Hostname, self).save()

    def __unicode__(self):
        return self.hostname
    
    def __str__(self):
        return self.hostname

    def enable(self):
        call(['hostname', self.hostname])

class NetworkInterfaceMode(models.Model):
    mode_name = models.CharField(max_length=10) #e.g. dhcp, static
    mode_description = models.TextField()

    def genConfig(self, nic):
        # dhcp config
        f = open('/etc/netctl/' + nic.interface_name + '_dhcp', 'w')
        f.write('# autogenerated netctl file for ' + nic.interface_name + '\n')
        f.write('# do not modify\n')
        f.write('Interface=' + nic.interface_name + '\n')
        f.write('Connection=ethernet\n')
        f.write('IP=dhcp\n')
        f.close()

        # static config
        f = open('/etc/netctl/' + nic.interface_name + '_static', 'w')
        f.write('# autogenerated netctl file for ' + nic.interface_name + '\n')
        f.write('# do not modify\n')
        f.write('Interface=' + nic.interface_name + '\n')
        f.write('Connection=ethernet\n')
        f.write('IP=static\n')
        f.write('Address=' + nic.ip_address + '/' + str(netmask2prefix(nic.netmask)) + '\n')
        f.write('Gateway=' + nic.gateway + '\n')
        f.close()
        
    def enable(self, nic):
        call('netctl', 'switch-to', nic.interface_name + '_' + self.mode_name)

    def __unicode__(self):
        return self.mode_name

    def __str__(self):
        return self.mode_name

class NetworkInterface(models.Model):
    device = models.CharField(max_length=200) #e.g. /dev/eth0
    mode = models.ForeignKey(NetworkInterfaceMode)
    interface_name = models.CharField(max_length=10)
    interface_description = models.TextField()
    ip_address = models.CharField(max_length=15)
    netmask = models.CharField(max_length=15)
    gateway = models.CharField(max_length=15)
    mac = models.CharField(max_length=100)

    def save(self):
        self.mode.genConfig(self)
        super(NetworkInterface, self).save()
    
    def enable(self):
        self.mode.enable(self)

    def __unicode__(self):
        return self.interface_name

    def __str__(self):
        return self.interface_name
